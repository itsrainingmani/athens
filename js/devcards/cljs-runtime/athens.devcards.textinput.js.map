{"version":3,"sources":["athens/devcards/textinput.cljs"],"mappings":"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","names":["athens.devcards.textinput/textinput-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.style/OPACITIES","athens.style/DEPTH-SHADOWS","athens.devcards.textinput/input-wrap","athens.devcards.textinput/input-icon","p__60391","map__60392","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.devcards.textinput/textinput","type","autoFocus","defaultValue","placeholder","on-change","value","style","icon","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/register-card","devcards.core/card-base","js/athens","js/athens.devcards","js/athens.devcards.textinput","js/athens.devcards.textinput.t_athens$devcards$textinput60394","athens.devcards.textinput/t_athens$devcards$textinput60394","_60396","meta60395","this__41690__auto__","devcard-opts__41691__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__41709__auto__","cljs.core/fn?","data-atom__41710__auto__","owner__41711__auto__","reagent.core/as-element","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.textinput/->t_athens$devcards$textinput60394","js/athens.devcards.textinput.t_athens$devcards$textinput60397","athens.devcards.textinput/t_athens$devcards$textinput60397","_60399","meta60398","athens.devcards.textinput/->t_athens$devcards$textinput60397","js/module$node_modules$$material_ui$icons$index.Face"],"sourcesContent":["(ns athens.devcards.textinput\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db]\n    [athens.style :refer [color OPACITIES DEPTH-SHADOWS]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def textinput-style\n  {:min-height \"32px\"\n   :color (color :body-text-color)\n   :caret-color (color :link-color)\n   :border-radius \"4px\"\n   :background (color :panel-color)\n   :padding \"2px 8px\"\n   :flex-basis \"100%\"\n   :border [[\"1px solid \" (color :body-text-color :opacity-low)]]\n   :transition-property \"box-shadow, border, background\"\n   :transition-duration \"0.1s\"\n   :transition-timing-function \"ease\"\n   ::stylefy/manual [[:placeholder {:opacity (:opacity-med OPACITIES)}]\n                     [:&:hover {:box-shadow (:4 DEPTH-SHADOWS)}]\n                     [:&:focus :&:focus:hover {:outline \"none\"\n                                               :border \"1px solid\"\n                                               :box-shadow (:8 DEPTH-SHADOWS)}]]})\n\n\n(def input-wrap\n  {:position \"relative\"\n   :display \"inline-flex\"\n   :align-items \"stretch\"\n   :justify-content \"stretch\"\n   ::stylefy/manual [[:input {:padding-left \"28px\"}]]})\n\n\n(def input-icon\n  {:position \"absolute\"\n   :top \"50%\"\n   :display \"flex\"\n   :pointer-events \"none\"\n   :transform \"translateY(-50%)\"\n   :left \"6px\"\n   :color (color :body-text-color)\n   :opacity (:opacity-med OPACITIES)\n   ::stylefy/manual [[:svg {:font-size \"20px\"}]]})\n\n\n;;; Components\n\n(defn textinput\n  [{:keys [type\n           autoFocus\n           defaultValue\n           placeholder\n           on-change\n           value\n           style\n           icon]}]\n  (if icon\n    [:div (use-style input-wrap)\n     [:input (use-style (merge textinput-style style) {:type type\n                                                       :autoFocus autoFocus\n                                                       :defaultValue defaultValue\n                                                       :value value\n                                                       :on-change on-change\n                                                       :placeholder placeholder})]\n     [:span (use-style input-icon) icon]]\n    [:input (use-style (merge textinput-style style) {:type type\n                                                      :autoFocus autoFocus\n                                                      :defaultValue defaultValue\n                                                      :value value\n                                                      :on-change on-change\n                                                      :placeholder placeholder})]))\n\n\n;;; Devcards\n\n\n(defcard-rg Input\n  [textinput {:placeholder \"pink\"}])\n\n\n(defcard-rg Input-with-icon\n  [textinput {:placeholder \"pink\" :icon [:> mui-icons/Face]}])\n\n"]}