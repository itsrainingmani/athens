{"version":3,"sources":["athens/router.cljs"],"mappings":"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","names":["re_frame.core.reg_sub","db","re_frame.core.reg_event_fx","p__54759","vec__54760","seq__54761","cljs.core/seq","first__54762","cljs.core/first","cljs.core/next","_","route","p__54763","p__54764","map__54765","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","vec__54766","cljs.core.nth","new-match","old-match","controllers","reitit.frontend.controllers/apply-controllers","node","posh.reagent/pull","athens.db/dsdb","node-title","cljs.core/deref","page-title","or__4126__auto__","js/document","cljs.core.assoc","cljs.core.dissoc","re-frame.core/reg-fx","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","debux.common.util/send-form!","opts__50925__auto__","result__50926__auto__","debux.common.util/send-trace!","e","e54770","reitit.frontend.easy/push-state","athens.router/routes","athens.router/router","reitit.frontend.router","reitit.coercion.spec/coercion","athens.router/on-navigate","re-frame.core/dispatch","athens.router/navigate","page","var_args","G__54772","athens.router/navigate-uid","js/Error","uid","shift","js/window","athens.router.navigate_uid","athens.router/init-routes!","cljs.core.prn","reitit.frontend.easy/start!"],"sourcesContent":["(ns athens.router\n  (:require\n    [athens.db :as db]\n    #_[athens.views :as views]\n    [day8.re-frame.tracing :refer-macros [fn-traced]]\n    [posh.reagent :refer [pull]]\n    [re-frame.core :refer [#_subscribe dispatch reg-sub reg-event-fx reg-fx]]\n    [reitit.coercion.spec :as rss]\n    [reitit.frontend :as rfe]\n    [reitit.frontend.controllers :as rfc]\n    [reitit.frontend.easy :as rfee]))\n\n;; subs\n(reg-sub\n  :current-route\n  (fn [db]\n    (:current-route db)))\n\n;; events\n(reg-event-fx\n  :navigate\n  (fn [_ [_ & route]]\n    {:navigate! route}))\n\n\n(reg-event-fx\n  :navigated\n  (fn [{:keys [db]} [_ new-match]]\n    (let [old-match   (:current-route db)\n          controllers (rfc/apply-controllers (:controllers old-match) new-match)\n          node (pull db/dsdb '[*] [:block/uid (-> new-match :path-params :id)]) ;; TODO make the page title query work when zoomed in on a block\n          node-title (:node/title @node)\n          page-title (str (or node-title \"untitled\") \" \u2013 Athens\")]\n      (set! (.-title js/document) page-title) ;; TODO make this side effect explicit\n      {:db (-> db\n               (assoc :current-route (assoc new-match :controllers controllers))\n               (dissoc :merge-prompt))\n       :timeout {:action :clear\n                 :id :merge-prompt}})))\n\n\n;; effects\n\n(reg-fx\n  :navigate!\n  (fn-traced [route]\n             (apply rfee/push-state route)))\n\n;; router definition\n\n(def routes\n  [\"/\"\n   [\"\"      {:name :home}]\n   [\"about\" {:name :about}]\n   [\"pages\" {:name :pages}]\n   [\"page/:id\" {:name :page}]])\n\n\n(def router\n  (rfe/router\n    routes\n    {:data {:coercion rss/coercion}}))\n\n\n(defn on-navigate\n  [new-match]\n  (when new-match\n    (dispatch [:navigated new-match])))\n\n\n(defn navigate\n  [page]\n  (dispatch [:navigate page]))\n\n\n(defn navigate-uid\n  ([uid]\n   (dispatch [:navigate :page {:id uid}]))\n  ([uid e]\n   (let [shift (.. e -shiftKey)]\n     (if shift\n       (do\n         (.. js/window getSelection empty)\n         (.. e preventDefault)\n         (dispatch [:right-sidebar/open-item uid]))\n       (navigate-uid uid)))))\n\n\n(defn init-routes!\n  []\n  (prn \"Initializing routes\")\n  (rfee/start!\n    router\n    on-navigate\n    {:use-fragment true}))\n"]}