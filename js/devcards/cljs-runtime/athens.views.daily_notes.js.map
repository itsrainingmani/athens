{"version":3,"sources":["athens/views/daily_notes.cljs"],"mappings":"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","names":["athens.views.daily-notes/daily-notes-scroll-area-style","athens.views.daily-notes/daily-notes-page-style","athens.style/DEPTH-SHADOWS","athens.views.daily-notes/daily-notes-notional-page-style","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","athens.views.daily-notes/scroll-daily-notes","_","cljs.core/deref","daily-notes","G__58760","re-frame.core/subscribe","from-bottom","js/document","doc-height","delta","G__58761","re-frame.core/dispatch","athens.util.get_day.cljs$core$IFn$_invoke$arity$1","cljs.core/count","athens.views.daily-notes/db-scroll-daily-notes","goog.functions/debounce","athens.views.daily-notes/daily-notes-panel","note-refs","G__58762","cljs.core/empty?","G__58763","athens.util.get_day.cljs$core$IFn$_invoke$arity$0","eids","G__58764","G__58765","G__58766","posh.reagent/q","athens.db/dsdb","cljs.core/not-empty","notes","G__58767","G__58768","G__58769","posh.reagent/pull-many","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","iter__4582__auto__","s__58771","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","b__58773","cljs.core/chunk-buffer","i__58772","map__58774","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58770","cljs.core/chunk-rest","map__58776","cljs.core/first","cljs.core/cons","cljs.core/rest","uid","athens.views.node-page/node-page-component","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.daily-notes\n  (:require\n    [athens.db :as db]\n    [athens.style :refer [DEPTH-SHADOWS]]\n    [athens.util :refer [get-day]]\n    [athens.views.node-page :refer [node-page-component]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [goog.functions :refer [debounce]]\n    [posh.reagent :refer [q pull-many]]\n    [re-frame.core :refer [dispatch subscribe]]\n    [stylefy.core :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def daily-notes-scroll-area-style\n  {:min-height \"calc(100vh + 1px)\"\n   :display        \"flex\"\n   :padding        \"1.25rem 0\"\n   :align-items    \"stretch\"\n   :flex           \"1 1 100%\"\n   :flex-direction \"column\"})\n\n\n(def daily-notes-page-style\n  {:box-shadow (:16 DEPTH-SHADOWS)\n   :align-self \"stretch\"\n   :justify-self \"stretch\"\n   :margin \"1.25rem 2.5rem\"\n   :padding \"1rem 2rem\"\n   :transition-duration \"0s\"\n   :border-radius \"0.5rem\"\n   :min-height \"calc(100vh - 10rem)\"})\n\n\n(def daily-notes-notional-page-style\n  (merge daily-notes-page-style {:box-shadow (:4 DEPTH-SHADOWS)\n                                 :opacity \"0.5\"}))\n\n\n;;; Helpers\n\n\n\n(defn scroll-daily-notes\n  [_]\n  (let\n    [daily-notes @(subscribe [:daily-notes/items])\n     from-bottom (.. js/document (getElementById \"daily-notes\") getBoundingClientRect -bottom)\n     doc-height (.. js/document -documentElement -scrollHeight)\n     delta (- from-bottom doc-height)]\n    (when (< delta 1)\n      (dispatch [:daily-note/next (get-day (count daily-notes))]))))\n\n\n(def db-scroll-daily-notes (debounce scroll-daily-notes 500))\n\n\n;;; Components\n\n\n(defn daily-notes-panel\n  []\n  (let [note-refs (subscribe [:daily-notes/items])]\n    (fn []\n      (when (empty? @note-refs)\n        (dispatch [:daily-note/next (get-day)]))\n      (let [eids (q '[:find [?e ...]\n                      :in $ [?uid ...]\n                      :where [?e :block/uid ?uid]]\n                    db/dsdb\n                    @note-refs)]\n        (when (not-empty @eids)\n          (let [notes (pull-many db/dsdb '[*] @eids)]\n            [:div#daily-notes (use-style daily-notes-scroll-area-style)\n             (doall\n               (for [{:keys [block/uid]} @notes]\n                 ^{:key uid}\n                 [:<>\n                  [:div (use-style daily-notes-page-style)\n                   [node-page-component [:block/uid uid]]]]))\n             [:div (use-style daily-notes-notional-page-style)\n              [:h1 \"Earlier\"]]]))))))\n"]}