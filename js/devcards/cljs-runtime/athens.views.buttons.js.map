{"version":3,"sources":["athens/views/buttons.cljs"],"mappings":"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","names":["athens.views.buttons/button-icons-style","athens.views.buttons/button-icons-not-last-child-style","athens.views.buttons/button-icons-not-first-child-style","athens.views.buttons/button-icons-only-child-style","athens.views.buttons/buttons-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.style.color.cljs$core$IFn$_invoke$arity$2","G__45549","garden.selectors/&","G__45550","garden.selectors/not","garden.selectors/last-child","G__45551","G__45552","garden.selectors/first-child","G__45553","fexpr__45555","G__45556","stylefy.core/class","var_args","G__45558","athens.views.buttons/button","js/Error","p__45559","map__45560","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","children","style","active","primary","class","props","props-","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/vec","cljs.core/flatten"],"sourcesContent":["(ns athens.views.buttons\n  (:require\n    [athens.db]\n    [athens.style :refer [color]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [garden.selectors :as selectors]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def button-icons-style\n  {:margin-block-start \"-0.0835em\"\n   :margin-block-end \"-0.0835em\"})\n\n\n(def button-icons-not-last-child-style {:margin-inline-end \"0.251em\"})\n\n(def button-icons-not-first-child-style {:margin-inline-style \"0.251em\"})\n\n\n(def button-icons-only-child-style\n  {:margin-inline-start \"-0.25rem\"\n   :margin-inline-end \"-0.25rem\"})\n\n\n(def buttons-style\n  {:cursor           \"pointer\"\n   :padding          \"0.375rem 0.625rem\"\n   :margin           \"0\"\n   :font-family      \"inherit\"\n   :font-size        \"inherit\"\n   :border-radius    \"0.25rem\"\n   :font-weight      \"500\"\n   :border           \"none\"\n   :display          \"inline-flex\"\n   :align-items      \"center\"\n   :color            (color :body-text-color)\n   :background-color \"transparent\"\n   :transition       \"all 0.075s ease\"\n   ::stylefy/manual [[:&:hover {:background (color :body-text-color :opacity-lower)}]\n                     [:&:active\n                      :&:hover:active\n                      :&.is-active {:color (color :body-text-color)\n                                    :background (color :body-text-color :opacity-low)}]\n                     [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                      :background (color :body-text-color :opacity-lower)\n                                                      :cursor \"default\"}]\n                     [:span {:flex \"1 0 auto\"\n                             :text-align \"left\"}]\n                     [:kbd {:margin-inline-start \"1rem\"\n                            :font-size \"85%\"}]\n                     [:svg button-icons-style\n                      [(selectors/& (selectors/not (selectors/last-child))) button-icons-not-last-child-style]\n                      [(selectors/& (selectors/not (selectors/first-child))) button-icons-not-first-child-style]\n                      [(selectors/& ((selectors/first-child (selectors/last-child)))) button-icons-only-child-style]]\n                     [:&.is-primary {:color (color :link-color)\n                                     :background (color :link-color :opacity-lower)}\n                      [:&:hover {:background (color :link-color :opacity-low)}]\n                      [:&:active\n                       :&:hover:active\n                       :&.is-active {:color \"white\"\n                                     :background (color :link-color)}]\n                      [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                       :background (color :body-text-color :opacity-lower)\n                                                       :cursor \"default\"}]]]})\n\n\n;;; Components\n\n(stylefy/class \"button\" buttons-style)\n\n\n(defn button\n  \"Keep button interface as close to vanilla hiccup as possible.\n  Dissoc :style :active and :class because we don't want to merge them in directly.\n  Can pass in a :key prop to make react happy, as a :key or ^{:key}. Just works\"\n  ([children] [button {} children])\n  ([{:keys [style active primary class] :as props} children]\n   (let [props- (dissoc props :style :active :primary :class)]\n     [:button (use-style (merge buttons-style style)\n                         (merge props- {:class (vec (flatten [(when active \"is-active\") (when primary \"is-primary\") class]))}))\n      children])))\n"]}