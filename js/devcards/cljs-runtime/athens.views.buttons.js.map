{"version":3,"sources":["athens/views/buttons.cljs"],"mappings":";;;;;;;;AAaA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAKL,AAAA,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAKL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAWgB,AAAA,AAACC,AAGsB,AAAA,AAAA,AAACC,AAGF,AAAA,AAACD,AACW,AAAA,AAAA,AAACC,AACK,AAAA,AAAA,AAACA,AACU,AAAA,AAAA,AAACA,AAKjCN,AACjB,AAAAO,AAAa,AAAAE,AAAe,AAACE,AAAAA,AAAAA;AAAhB,AAAA,AAAAF,AAAAA,AAACC,AAAAA,AAAAA;;AAAd,AAAA,AAAAH,AAAAA,AAACC,AAAAA,AAAAA;AA1BxB,AA0B4EP,AACrD,AAAAW,AAAa,AAAAC,AAAe,AAACC,AAAAA,AAAAA;AAAhB,AAAA,AAAAD,AAAAA,AAACH,AAAAA,AAAAA;;AAAd,AAAA,AAAAE,AAAAA,AAACJ,AAAAA,AAAAA;AA3BxB,AA2B6EN,AACtD,AAAAa,AAAa,AAAAC,AAAC,AAAAC,AAAuB,AAACN,AAAAA,AAAAA;AAAxB,AAAA,AAAAM,AAAAA,AAACH,AAAAA,AAAAA;;AAAF,AAAA,AAAAE,AAAAA,AAAAA;;AAAb,AAAA,AAAAD,AAAAA,AAACP,AAAAA,AAAAA;AA5BxB,AAAA,AAAA,AAAA,AAAA,AA4BsFL;AAGtF,AAAKe,AACH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAMf,AAAsB,AAAA,AAACC,AACU,AAAA,AAAA,AAACC,AACsB,AAAA,AAAA,AAACA,AAIS,AAAA,AAACD,AACM,AAAA,AAAA,AAACC,AACU,AAAA,AAAA,AAACA,AAIjCN,AACjB,AAAAoB,AAAa,AAAAC,AAAe,AAACV,AAAAA,AAAAA;AAAhB,AAAA,AAAAU,AAAAA,AAACX,AAAAA,AAAAA;;AAAd,AAAA,AAAAU,AAAAA,AAACZ,AAAAA,AAAAA;AAb3C,AAa+FP,AACrD,AAAAqB,AAAa,AAAAC,AAAe,AAACT,AAAAA,AAAAA;AAAhB,AAAA,AAAAS,AAAAA,AAACb,AAAAA,AAAAA;;AAAd,AAAA,AAAAY,AAAAA,AAACd,AAAAA,AAAAA;AAd3C,AAcgGN,AACtD,AAAAsB,AAAa,AAAAC,AAAC,AAAAC,AAAuB,AAACf,AAAAA,AAAAA;AAAxB,AAAA,AAAAe,AAAAA,AAACZ,AAAAA,AAAAA;;AAAF,AAAA,AAAAW,AAAAA,AAAAA;;AAAb,AAAA,AAAAD,AAAAA,AAAChB,AAAAA,AAAAA;AAA8DL;AAM3G;;;AAAA,AAAAwB,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAEWM;AAFX,AAAAF,AAAAJ,AAAA,AAEoBO;AAFpB,AAAAH,AAAAJ,AAAA,AAE0BQ;AAF1B,AAAAJ,AAAAJ,AAAA,AAEsCS;AAFtC,AAAAL,AAAAJ,AAAA,AAE4CU;AAF5C,AAAAN,AAAAJ,AAAA,AAEmDW;AAFnD,AAAA,AAAA,AAGW,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAU,AAACrB,AAAMf,AAAciC,AAAkBH,AACAE,AACFG,AAAM,AAAA,AAAA,AAAA,AAAMD,AACpEH;;AAGH;;;AAAA,AAAAM,AAAME;AAAN,AAAA,AAAAD,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAb,AAAA,AAAAa,AAAA,AAAA,AAAA,AAAA,AAAAZ,AAAAC,AAAAW,AAAAA;AAAA,AAAAV,AAAAU,AAAA,AAEWR;AAFX,AAAAF,AAAAU,AAAA,AAEoBP;AAFpB,AAAAH,AAAAU,AAAA,AAE0BN;AAF1B,AAAAJ,AAAAU,AAAA,AAEsCL;AAFtC,AAAAL,AAAAU,AAAA,AAE4CJ;AAF5C,AAAAN,AAAAU,AAAA,AAEmDH;AAFnD,AAAA,AAAA,AAGW,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAU,AAACrB,AAAMD,AAAsBmB,AAAkBH,AACAE,AACFG,AAAM,AAAA,AAAA,AAAA,AAAMD,AAC5EH","names":["athens.views.buttons/button-icons-style","athens.views.buttons/button-icons-not-last-child-style","athens.views.buttons/button-icons-not-first-child-style","athens.views.buttons/button-icons-only-child-style","athens.views.buttons/buttons-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.style.color.cljs$core$IFn$_invoke$arity$2","G__39363","garden.selectors/&","G__39364","garden.selectors/not","garden.selectors/last-child","G__39365","G__39366","garden.selectors/first-child","G__39367","fexpr__39369","G__39370","athens.views.buttons/buttons-primary-style","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__39371","G__39372","G__39373","G__39374","G__39375","fexpr__39377","G__39378","p__39379","map__39380","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.views.buttons/button","disabled","label","on-click-fn","style","active","class","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","p__39382","map__39383","athens.views.buttons/button-primary"],"sourcesContent":["(ns athens.views.buttons\n  (:require\n    [athens.db]\n    [athens.style :refer [color]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [garden.selectors :as selectors]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Styles\n\n\n(def button-icons-style\n  {:margin-block-start \"-0.0835em\"\n   :margin-block-end \"-0.0835em\"})\n\n\n(def button-icons-not-last-child-style {:margin-inline-end \"0.251em\"})\n\n(def button-icons-not-first-child-style {:margin-inline-style \"0.251em\"})\n\n\n(def button-icons-only-child-style\n  {:margin-inline-start \"-0.25rem\"\n   :margin-inline-end \"-0.25rem\"})\n\n\n(def buttons-style\n  {:cursor           \"pointer\"\n   :padding          \"0.375rem 0.625rem\"\n   :margin           \"0\"\n   :font-family      \"inherit\"\n   :font-size        \"inherit\"\n   :border-radius    \"0.25rem\"\n   :font-weight      \"500\"\n   :border           \"none\"\n   :display          \"inline-flex\"\n   :align-items      \"center\"\n   :color            (color :body-text-color)\n   :background-color \"transparent\"\n   :transition       \"all 0.075s ease\"\n   ::stylefy/manual [[:&:hover {:background (color :body-text-color :opacity-lower)}]\n                     [:&:active\n                      :&:hover:active\n                      :&.is-active {:color (color :body-text-color)\n                                    :background-color  (color :body-text-color :opacity-low)}]\n                     [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                      :background-color (color :body-text-color :opacity-lower)\n                                                      :cursor \"default\"}]\n                     [:span {:flex \"1 0 auto\"\n                             :text-align \"left\"}]\n                     [:kbd {:margin-inline-start \"1rem\"}]\n                     [:.MuiSvgIcon-root button-icons-style\n                      [(selectors/& (selectors/not (selectors/last-child))) button-icons-not-last-child-style]\n                      [(selectors/& (selectors/not (selectors/first-child))) button-icons-not-first-child-style]\n                      [(selectors/& ((selectors/first-child (selectors/last-child)))) button-icons-only-child-style]]]})\n\n\n(def buttons-primary-style\n  (merge buttons-style {:color (color :link-color)\n                        :background-color (color :link-color :opacity-lower)\n                        ::stylefy/manual [[:&:hover {:background (color :link-color :opacity-low)}]\n                                          [:&:active\n                                           :&:hover:active\n                                           :&.is-active {:color \"white\"\n                                                         :background-color (color :link-color)}]\n                                          [:&:disabled :&:disabled:active {:color (color :body-text-color 0.3)\n                                                                           :background-color (color :body-text-color :opacity-lower)\n                                                                           :cursor \"default\"}]\n                                          [:span {:flex \"1 0 auto\"\n                                                  :text-align \"left\"}]\n                                          [:.MuiSvgIcon-root button-icons-style\n                                           [(selectors/& (selectors/not (selectors/last-child))) button-icons-not-last-child-style]\n                                           [(selectors/& (selectors/not (selectors/first-child))) button-icons-not-first-child-style]\n                                           [(selectors/& ((selectors/first-child (selectors/last-child)))) button-icons-only-child-style]]]}))\n\n\n;;; Components\n\n\n(defn button\n  \"Creates a button control\"\n  [{:keys [disabled label on-click-fn style active class]}]\n  [:button (use-style (merge buttons-style style) {:disabled disabled\n                                                   :on-click on-click-fn\n                                                   :class [class (when active \"is-active\")]})\n   label])\n\n\n(defn button-primary\n  \"Creates a button control\"\n  [{:keys [disabled label on-click-fn style active class]}]\n  [:button (use-style (merge buttons-primary-style style) {:disabled disabled\n                                                           :on-click on-click-fn\n                                                           :class [class (when active \"is-active\")]})\n   label])\n"]}