{"version":3,"sources":["athens/views/node_page.cljs"],"mappings":"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","names":["athens.views.node-page/page-style","athens.views.node-page/title-style","athens.style.color","garden.selectors/+","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","athens.views.node-page/references-list-style","athens.views.node-page/references-group-title-style","athens.views.node-page/references-group-style","athens.views.node-page/reference-breadcrumbs-style","athens.views.node-page/references-group-block-style","athens.views.node-page/page-menu-toggle-style","athens.views.node-page/handler","val","uid","re-frame.core/dispatch","athens.views.node-page/db-handler","goog.functions/debounce","athens.views.node-page/is-timeline-page","cljs.core/boolean","e57244","vec__57245","cljs.core.nth","m","d","y","clojure.string.split","tick.alpha.api.date","clojure.string.join","js/Object","_","athens.views.node-page/handle-new-first-child-block-click","parent-uid","new-uid","athens.util/gen-block-uid","now","athens.util/now-ts","athens.views.node-page/placeholder-block-el","stylefy.core.use_style","athens.views.blocks/bullet-style","athens.views.node-page/node-page-el","state","reagent.core.atom","block","editing-uid","ref-groups","timeline-page?","map__57248","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","map__57249","cljs.core/deref","children","title","is-shortcut?","show","x","komponentit.autosize/textarea","cljs.core._EQ_","e","G__57252","G__57253","athens.views.buttons/button","cljs.core.swap_BANG_","cljs.core/assoc","rect","cljs.core/merge","js/module$node_modules$$material_ui$icons$index.ExpandMore","cljs.core.merge","athens.views.dropdown/dropdown-style","athens.views.dropdown/menu-style","js/module$node_modules$$material_ui$icons$index.BookmarkBorder","js/module$node_modules$$material_ui$icons$index.Bookmark","athens.views.dropdown/menu-separator-style","athens.router/navigate","js/module$node_modules$$material_ui$icons$index.Delete","athens.parse-renderer/parse-and-render","cljs.core/empty?","iter__4529__auto__","s__57255","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__57257","cljs.core/chunk-buffer","i__57256","map__57258","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__57254","cljs.core/chunk-rest","map__57260","cljs.core/first","cljs.core/cons","cljs.core/rest","child","athens.views.blocks/block-el","cljs.core.doall","s__57263","b__57265","i__57264","vec__57266","iter__57262","vec__57327","linked-or-unlinked","refs","cljs.core/not-empty","filter-state","athens.db/construct-links","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","cljs.core/not","js/module$node_modules$$material_ui$icons$index.FilterList","athens.views.filters/filters-el","s__57270","b__57272","i__57271","vec__57273","iter__57269","vec__57300","s__57331","b__57333","i__57332","vec__57334","iter__57330","vec__57361","group-title","group","athens.router.navigate_uid","athens.parse-renderer/pull-node-from-string","s__57277","b__57279","i__57278","map__57280","iter__57276","map__57290","s__57304","b__57306","i__57305","map__57307","iter__57303","map__57317","s__57338","b__57340","i__57339","map__57341","iter__57337","map__57351","s__57365","b__57367","i__57366","map__57368","iter__57364","map__57378","parents","athens.views.breadcrumbs/breadcrumbs-list","js/module$node_modules$$material_ui$icons$index.LocationOn","s__57283","b__57285","i__57284","map__57286","iter__57282","map__57288","s__57293","b__57295","i__57294","map__57296","iter__57292","map__57298","s__57310","b__57312","i__57311","map__57313","iter__57309","map__57315","s__57320","b__57322","i__57321","map__57323","iter__57319","map__57325","s__57344","b__57346","i__57345","map__57347","iter__57343","map__57349","s__57354","b__57356","i__57355","map__57357","iter__57353","map__57359","s__57371","b__57373","i__57372","map__57374","iter__57370","map__57376","s__57381","b__57383","i__57382","map__57384","iter__57380","map__57386","string","athens.views.breadcrumbs/breadcrumb","or__4126__auto__","athens.views.node-page/node-page-component","ident","map__57388","node","athens.db/get-node-document","re_frame.core.subscribe","clojure.string/blank?","athens.db/get-linked-references","athens.util/escape-str","athens.db/get-unlinked-references","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.node-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db :refer [get-linked-references get-unlinked-references construct-links]]\n    [athens.parse-renderer :as parse-renderer :refer [pull-node-from-string]]\n    [athens.router :refer [navigate-uid navigate]]\n    [athens.style :refer [color]]\n    [athens.util :refer [now-ts gen-block-uid escape-str]]\n    [athens.views.blocks :refer [block-el bullet-style]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    [athens.views.buttons :refer [button]]\n    [athens.views.dropdown :refer [dropdown-style menu-style menu-separator-style]]\n    [athens.views.filters :refer [filters-el]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :as string]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]\n    [tick.alpha.api :as t]))\n\n\n;;; Styles\n\n\n(def page-style\n  {:margin \"2rem auto\"\n   :padding \"1rem 2rem\"\n   :flex-basis \"100%\"\n   :max-width \"55rem\"})\n\n\n(def title-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :flex-grow \"1\"\n   :margin \"0.2em 0 0.2em 1rem\"\n   :letter-spacing \"-0.03em\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :font-weight \"inherit\"\n                                 :padding \"0\"\n                                 :letter-spacing \"inherit\"\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :background \"transparent\"\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"0.25rem\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n(def references-style {:margin-block \"3em\"})\n\n\n(def references-heading-style\n  {:font-weight \"normal\"\n   :display \"flex\"\n   :padding \"0 2rem\"\n   :align-items \"center\"\n   ::stylefy/manual [[:svg {:margin-right \"0.25em\"\n                            :font-size \"1rem\"}]\n                     [:span {:flex \"1 1 100%\"}]]})\n\n\n(def references-list-style\n  {:font-size \"14px\"})\n\n\n(def references-group-title-style\n  {:color (color :link-color)\n   :margin \"0 1.5rem\"\n   :font-weight \"500\"\n   ::stylefy/manual [[:a:hover {:cursor \"pointer\"\n                                :text-decoration \"underline\"}]]})\n\n\n(def references-group-style\n  {:background (color :background-minus-2 :opacity-med)\n   :padding \"1rem 0.5rem\"\n   :border-radius \"0.25rem\"\n   :margin \"0.5em 0\"})\n\n\n(def reference-breadcrumbs-style\n  {:font-size \"12px\"\n   :padding \"0.25rem calc(2rem - 0.5em)\"})\n\n\n(def references-group-block-style\n  {:border-top [[\"1px solid \" (color :border-color)]]\n   :padding-block-start \"1em\"\n   :margin-block-start \"1em\"\n   ::stylefy/manual [[:&:first-of-type {:border-top \"0\"\n                                        :margin-block-start \"0\"}]]})\n\n\n(def page-menu-toggle-style\n  {:position \"absolute\"\n   :left \"-0.5rem\"\n   :border-radius \"1000px\"\n   :padding \"0.375rem 0.5rem\"\n   :color (color :body-text-color :opacity-high)\n   :top \"50%\"\n   :transform \"translate(-100%, -50%)\"})\n\n\n;;; Helpers\n\n\n(defn handler\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :node/title val]]]))\n\n\n(def db-handler (debounce handler 500))\n\n\n(defn is-timeline-page\n  [uid]\n  (boolean\n    (try\n      (let [[m d y] (string/split uid \"-\")]\n        (t/date (string/join \"-\" [y m d])))\n      (catch js/Object _ false))))\n\n\n(defn handle-new-first-child-block-click\n  [parent-uid]\n  (let [new-uid   (gen-block-uid)\n        now       (now-ts)]\n    (dispatch [:transact [{:block/uid       parent-uid\n                           :edit/time       now\n                           :block/children  [{:block/order  0\n                                              :block/uid    new-uid\n                                              :block/open   true\n                                              :block/string \"\"}]}]])\n    (dispatch [:editing/uid new-uid])))\n\n\n;;; Components\n\n(defn placeholder-block-el\n  [parent-uid]\n  [:div {:class \"block-container\"}\n   [:div {:style {:display \"flex\"}}\n    [:span (use-style bullet-style)]\n    [:span {:on-click #(handle-new-first-child-block-click parent-uid)} \"Click here to add content...\"]]])\n\n\n;; TODO: where to put page-level link filters?\n(defn node-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:menu/show false\n                       :menu/x nil\n                       :menu/y nil\n                       :lf/show false\n                       :lf/x nil\n                       :lf/y nil})]\n    (fn [block editing-uid ref-groups timeline-page?]\n      (let [{:block/keys [children uid] title :node/title is-shortcut? :page/sidebar} block\n            {:menu/keys [show x y]} @state]\n\n        [:div (use-style page-style {:class [\"node-page\"]})\n         ;; TODO: implement timeline\n         ;;(when timeline-page?\n         ;;  [button {:on-click #(dispatch [:jump-to-timeline uid])}\n         ;;              [:<>\n         ;;               [:mui-icons Left]\n         ;;               [:span \"Timeline\"]]}])\n\n         ;; Header\n         [:h1 (use-style title-style {:data-uid uid :class \"page-header\"})\n          (when-not timeline-page?\n            [autosize/textarea\n             {:default-value title\n              :class         (when (= editing-uid uid) \"is-editing\")\n              :auto-focus    true\n              :on-change     (fn [e] (db-handler (.. e -target -value) uid))}])\n          [button {:class    [(when show \"active\")]\n                   :on-click (fn [e]\n                               (if show\n                                 (swap! state assoc :menu/show false)\n                                 (let [rect (.. e -target getBoundingClientRect)]\n                                   (swap! state merge {:menu/show true\n                                                       :menu/x    (.. rect -left)\n                                                       :menu/y    (.. rect -bottom)}))))\n                   :style    page-menu-toggle-style}\n           [:> mui-icons/ExpandMore]]\n\n          (when show\n            [:div (merge (use-style dropdown-style)\n                         {:style {:font-size \"14px\"\n                                  :position \"fixed\"\n                                  :left (str x \"px\")\n                                  :top (str y \"px\")}})\n             [:div (use-style menu-style)\n              (if is-shortcut?\n                [button {:on-click #(dispatch [:page/remove-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/BookmarkBorder]\n                  [:span \"Remove Shortcut\"]]]\n                [button {:on-click #(dispatch [:page/add-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/Bookmark]\n                  [:span \"Add Shortcut\"]]])\n              [:hr (use-style menu-separator-style)]\n              [button {:on-click #(do\n                                    (navigate :pages)\n                                    (dispatch [:page/delete uid]))}\n               [:<> [:> mui-icons/Delete] [:span \"Delete Page\"]]]]])\n          (parse-renderer/parse-and-render title uid)]\n\n         ;; Children\n         (if (empty? children)\n           [placeholder-block-el uid]\n           [:div\n            (for [{:block/keys [uid] :as child} children]\n              ^{:key uid}\n              [block-el child])])\n\n\n         ;; References\n         (doall\n           (for [[linked-or-unlinked refs] ref-groups]\n             (when (not-empty refs)\n               (let [filter-state (r/atom {:sort :lex\n                                :items (construct-links title)\n                                :search \"\"})]\n               [:section (use-style references-style {:key linked-or-unlinked})\n                [:h4 (use-style references-heading-style)\n                 [(r/adapt-react-class mui-icons/Link)]\n                 [:span linked-or-unlinked]\n                 [:div {:style {:position \"relative\" :display \"inline-block\"}}\n                  [button {:class [(when (:lf/show @state) \"active\")]\n                           :on-click #(swap! state assoc :lf/show (not (:lf/show @state)))}\n                   [(r/adapt-react-class mui-icons/FilterList)]]\n                  (when (:lf/show @state)\n                    [:div (merge (use-style dropdown-style)\n                                 {:style {:font-size \"14px\"\n                                          :display \"inline-block\"\n                                          :position \"absolute\"\n                                          :z-index 3\n                                          :width \"18rem\"\n                                          :left \"-1050%\"\n                                          :top \"0%\"}})\n                     [:div (use-style menu-style)\n                      [filters-el uid filter-state]]])]]\n                [:div (use-style references-list-style)\n                 (doall\n                   (for [[group-title group] refs]\n                     [:div (use-style references-group-style {:key (str \"group-\" group-title)})\n                      [:h4 (use-style references-group-title-style)\n                       [:a {:on-click #(navigate-uid (:block/uid @(pull-node-from-string group-title)))} group-title]]\n                      (doall\n                        (for [{:block/keys [uid parents] :as block} group]\n                          [:div (use-style references-group-block-style {:key (str \"ref-\" uid)})\n                           ;; TODO: expand parent on click\n                           [block-el block]\n                           (when (> (count parents) 1)\n                             [breadcrumbs-list {:style reference-breadcrumbs-style}\n                              [(r/adapt-react-class mui-icons/LocationOn)]\n                              (doall\n                                (for [{:keys [node/title block/string block/uid]} parents]\n                                  [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)} (or title string)]))])]))]))]]))))]))))\n\n\n(defn node-page-component\n  \"One diff between datascript and posh: we don't have pull in q for posh\n  https://github.com/mpdairy/posh/issues/21\"\n  [ident]\n  (let [{:keys [block/uid node/title] :as node} (db/get-node-document ident)\n        editing-uid @(subscribe [:editing/uid])\n        timeline-page? (is-timeline-page uid)]\n    (when-not (string/blank? title)\n      ;; TODO: let users toggle open/close references\n      (let [ref-groups [[\"Linked References\" (get-linked-references (escape-str title))]\n                        [\"Unlinked References\" (get-unlinked-references (escape-str title))]]]\n        [node-page-el node editing-uid ref-groups timeline-page?]))))\n"]}