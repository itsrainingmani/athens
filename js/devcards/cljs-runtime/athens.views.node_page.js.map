{"version":3,"sources":["athens/views/node_page.cljs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA6BA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA;AAOL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AAwByC,AAAA,AAACC,AAezB,AAAA,AAAA,AAACC;AAGvB,AAAA,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAUL,AAAA,AAAA,AAAA,AAAKC;AAIL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AACK,AAAA,AAACL;AAOX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKM,AACU,AAAA,AAAA,AAACC;AAMhB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC;AAKL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKC,AACyB,AAAA,AAACT;AAO/B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKU,AAKK,AAAA,AAAA,AAACH;AAQX,AAAA,AAAMI,AACHC,AAAIC;AADP,AAEE,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAA2CD,AAAiBD;AAA5D,AAAA,AAAAE,AAAAA,AAACC,AAAAA,AAAAA;;AAGH,AAAKC,AAAW,AAAA,AAACC,AAASN;AAG1B,AAAA,AAAMQ,AACHC;AADH,AAAA,AAAAF,AAEG,AAAAG,AAAA,AAAA;AAAAC,AAKGG;AALHF,AAMGH;AANH,AAAA,AAAAC,AAAAC,AAAAC,AAAAF,AAAAC,AAAAC,AAACC,AAAAA,AAAAA;;;AASJ,AAAA,AAAME,AACHC;AADH,AAEE,AAAMC,AAAQ,AAACC,AAAU,AAAKC,AAAEC,AAAEC;AAAT,AAAY,AAACC,AAAMH,AAAEE,AAAE,AAACE,AAA2BF;AAA9D,AAEWL;AACnBQ,AAAO,AAACC,AAAI,AAAKC;AAAL,AAAS,AAACC,AAAsBD;AAAKV;AAHvD,AAIE,AAACY,AACC,AAAKC;AAAL,AACE,AAAA,AAAA,AAACC,AAAMD,AAAsB,AAACE,AAAId,AAAQ,AAAA,AAAQY;AACpDL;;AAGN,AAAA,AAAMQ,AACHR;AADH,AAEE,AAACS,AAAS,AAAKC;AAAL,AACE,AAAA,AAAA,AAAA,AAAA,AAAIA,AAEAC;AAENX;;AAGZ,AAAA,AAAMY,AACH3B;AADH,AAEE,AAAA,AAAA,AAAA,AAAIA,AAAQD,AAAYO,AAAwBiB,AAAgBK;;AAGlE,AAAA,AAAMC,AACHpC;AADH,AAEE,AAACqC,AACC,AAAA,AACE,AAAAE,AAAc,AAAA,AAACI,AAAa3C;AAA5B,AAAAwC,AAAAD,AAAA,AAAA,AAAOtB;AAAP,AAAAuB,AAAAD,AAAA,AAAA,AAASE;AAAT,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAACE,AAAO,AAAA,AAAA,AAACC,AAAiBH,AAAEzB,AAAEwB;AAFlC,AAAA,AAAAH,AAGSQ;AAHT,AAAAR,AAGmBpB;AAHnB,AAAA;;AAAA,AAAA,AAAAoB;;;;;AAMJ,AAAA,AAAMS,AACHC;AADH,AAEE,AAAMC,AAAU,AAACC;AACXC,AAAU,AAACC;AADjB,AAEE,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAwCL,AACAG,AAEgBF;AAHxD,AAAA,AAAAI,AAAAA,AAACnD,AAAAA,AAAAA;;AAMD,AAAAoD,AAAA,AAAA,AAAwBL;AAAxB,AAAA,AAAAK,AAAAA,AAACpD,AAAAA,AAAAA;;AAKL,AAAA,AAAMqD,AACHP;AADH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAIW,AAACQ,AAAUC;AAJtB,AAKuB,AAACV,AAAmCC;AAL3D;;AASA,AAAA,AAAMU,AACHxC,AAAEA,AAAEA,AAAEA;AADT,AAEE,AAAMyC,AAAM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC;AAAb,AAGE,AAAKjC,AAAMkC,AAAYC,AAAWC;AAAlC,AACE,AAAAC,AAAgFrC;AAAhFqC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAnC,AAAAmC,AAAA,AAAkCM;AAAlC,AAAAzC,AAAAmC,AAAA,AAAoDO;AAApD,AAAA1C,AAAAmC,AAAA,AAAoBK;AAApB,AAAAxC,AAAAmC,AAAA,AAA6BhE;AAA7BoE,AAAA,AAAA/D,AAC+BsD;AAD/BS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAH,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAA,AAAAF,AAAAC,AAAAC,AAAAA;AAAA,AAAAvC,AAAAuC,AAAA,AACmBI;AADnB,AAAA3C,AAAAuC,AAAA,AACwBpC;AADxB,AAAAH,AAAAuC,AAAA,AAC0B1B;AAD1B,AAAA,AAAA,AAAA,AAAA,AAGQ,AAAA,AAAA,AAAA,AAAA,AAAC+B,AAAUxF,AASX,AAAA,AAAA,AAAA,AAAA,AAACwF,AAAUvF,AAAuBc,AACtC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAU+D,AACPW,AACgBJ,AACA,AAAA,AAAA,AAAA,AAAM,AAACK,AAAEd,AAAY7D,AAErB,AAAK4E;AAAL,AAAQ,AAAAC,AAAY,AAAA,AAAID;AAAhBE,AAAkC9E;AAAlC,AAAA,AAAA6E,AAAAC,AAAAD,AAAAC,AAAC3E,AAAAA,AAAAA;AAlBhC,AAAA,AAAA,AAAA,AAAA,AAmBK4E,AAAmB,AAAA,AAAA,AAAA,AAAMP,AACP,AAAKI;AAAL,AACE,AAAIJ;AACF,AAAA,AAAA,AAACQ,AAAMrB,AAAMsB;;AACb,AAAMC,AAAK,AAAA,AAAIN;AAAf,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAACO,AAAMxB,AAAMyB,AACkB,AAAIF,AACJ,AAAIA;;AA1BhE,AAAA,AAAA,AA2BuBrF,AACdwF,AAEL,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMb,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAC5C,AAAM,AAAC4B,AAAU8B,AAGI,AAAA,AAAKtD,AACN,AAAA,AAAKU,AACzB,AAACc,AAAU+B,AAChB,AAAA,AAAA,AAAA,AAAA,AAAIhB,AACDQ;AADH,AACsB,AAAAS,AAAA,AAAA,AAAiCxF;AAAjC,AAAA,AAAAwF,AAAAA,AAACtF,AAAAA,AAAAA;AADvB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGQuF,AAELV;AALH,AAKsB,AAAAW,AAAA,AAAA,AAA8B1F;AAA9B,AAAA,AAAA0F,AAAAA,AAACxF,AAAAA,AAAAA;AAZ3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAOI,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOQyF,AAEH,AAACnC,AAAUoC,AACfb;AAjBL,AAiBwB,AACE,AAAA,AAACc;;AACD,AAAAC,AAAA,AAAA,AAAwB9F;AAAxB,AAAA,AAAA8F,AAAAA,AAAC5F,AAAAA,AAAAA;AAnB3B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoBc6F,AACd,AAACC,AAAgC1B,AAAMtE,AAGxC,AAAA,AAAA,AAAA,AAAI,AAACiG,AAAO5B,AACTd,AAAqBvD,AAErB,AAAAkG,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAlE,AAAAgE;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAC,AAAAH;AAAA,AAAAI,AAiqEuC,AAAAuI,AAAA3I;AAjqEvCK,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAI,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAJ;AAAA,AAAAK,AAAA,AAAAC,AAAAP,AAAAK;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA5C,AAAA,AAAA4C,AAAA,AAAA,AAAA,AAAA,AAAA3C,AAAAC,AAAA0C,AAAAA;AAAAA,AAA6BU;AAA7B,AAAA1F,AAAAgF,AAAA,AAAoB7G;AAApB,AAAA,AAAA,AAAA+G,AAAAL,AAAA,AAAA,AAAA,AAAA,AACS1G,AACNwH,AAASD;;AAFZ,AAAA,AAAAX,AAAA;;;;AAAA;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAP,AAAA,AAAAQ,AAAA,AAAAC,AAAAhB;;AAAA,AAAAa,AAAA,AAAAC,AAAAP,AAAA;;;AAAA,AAAAU,AAAA,AAAAnF,AAAAkE;AAAAiB,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAnD,AAAA,AAAAmD,AAAA,AAAA,AAAA,AAAA,AAAAlD,AAAAC,AAAAiD,AAAAA;AAAAA,AAA6BG;AAA7B,AAAA1F,AAAAuF,AAAA,AAAoBpH;AAApB,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAnB,AACSnG,AACNwH,AAASD;;;AAFZ;;;;AAAA,AAAA;;AAAA,AAAA,AAAArB,AAAoC7B;AAMvC,AAACoD,AACC,AAAAvB,AAAA,AAAAwB;AAAA,AAAA,AAAAtB,AAAA,AAAA;AAAA,AAAA,AAAAsB,AAAAA;;AAAA,AAAA,AAAArB,AAAA,AAAAlE,AAAAuF;AAAA,AAAA,AAAArB;AAAA,AAAA,AAAAqB,AAAArB;AAAA,AAAA,AAAA,AAAAC,AAAAoB;AAAA,AAAAnB,AA0pEwC,AAAAuI,AAAApH;AA1pExClB,AAAA,AAAAC,AAAAF;AAAAoB,AAAA,AAAAhB,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAoB,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAApB;AAAA,AAAAqB,AAAA,AAAAf,AAAAP,AAAAqB;AAAA,AAAApF,AAAAqF,AAAA,AAAA,AAAOG;AAAP,AAAAxF,AAAAqF,AAAA,AAAA,AAA0BI;AAA1B,AAAA,AAAA,AAAAlB,AAAAY,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAACO,AAAUD,AACL,AAAA,AAAA,AAACxD,AAAUpF,AAAuB2I,AACtC,AAACxE,AAAUlE,AACd,AAAC6I,AAAoBC,AACfJ,AACNjD,AAAyB,AAACoD,AAAoBE,AAC1C,AAAC7E,AAAUjE,AAChB,AAACkI,AACC,AAAAvB,AAAA;AAAAoC;AAAA,AAAA,AAAAlC,AAAA,AAAA;;AAAA,AAAA,AAAAkC,AAAAA;;AAAA,AAAA,AAAAjC,AAAA,AAAAlE,AAAAmG;AAAA,AAAA,AAAAjC;AAAA,AAAA,AAAAiC,AAAAjC;AAAA,AAAA,AAAA,AAAAC,AAAAgC;AAAA,AAAA/B,AAipEgC,AAAAuI,AAAAxG;AAjpEhC9B,AAAA,AAAAC,AAAAF;AAAAgC,AAAA,AAAA5B,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAgC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAhC;AAAA,AAAAiC,AAAA,AAAA3B,AAAAP,AAAAiC;AAAA,AAAAhG,AAAAiG,AAAA,AAAA,AAAOS;AAAP,AAAA1G,AAAAiG,AAAA,AAAA,AAAmBU;AAAnB,AAAA,AAAA,AAAApC,AAAAwB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC9D,AAAUhF,AAA6B,AAAA,AAAcyJ,AACtD,AAAC1F,AAAUhE;;AAFnB,AAGoB,AAAC4J,AAAa,AAAA,AAAA,AAAA/I,AAAa,AAACgJ,AAAsBH;;AAAgBA,AACnF,AAACzB,AACC,AAAAvB,AAAA;AAAAoD;AAAA,AAAA,AAAAlD,AAAA,AAAA;;AAAA,AAAA,AAAAkD,AAAAA;;AAAA,AAAA,AAAAjD,AAAA,AAAAlE,AAAAmH;AAAA,AAAA,AAAAjD;AAAA,AAAA,AAAAiD,AAAAjD;AAAA,AAAA,AAAA,AAAAC,AAAAgD;AAAA,AAAA/C,AA4oE2B,AAAAuI,AAAAxF;AA5oE3B9C,AAAA,AAAAC,AAAAF;AAAAgD,AAAA,AAAA5C,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAgD,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAhD;AAAA,AAAAiD,AAAA,AAAA3C,AAAAP,AAAAiD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAxF,AAAA,AAAAwF,AAAA,AAAA,AAAA,AAAA,AAAAvF,AAAAC,AAAAsF,AAAAA;AAAAA,AAAqC9H;AAArC,AAAAE,AAAA4H,AAAA,AAAoBzJ;AAApB,AAAA6B,AAAA4H,AAAA,AAAwB1I;AAAxB,AAAA,AAAA,AAAAgG,AAAAwC,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC9E,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAA8E;AAAA,AAAA,AAAA5E,AAAA,AAAA;;AAAA,AAAA,AAAA4E,AAAAA;;AAAA,AAAA,AAAA3E,AAAA,AAAAlE,AAAA6I;AAAA,AAAA,AAAA3E;AAAA,AAAA,AAAA2E,AAAA3E;AAAA,AAAA,AAAA,AAAAC,AAAA0E;AAAA,AAAAzE,AAooEmB,AAAAuI,AAAA9D;AApoEnBxE,AAAA,AAAAC,AAAAF;AAAA0E,AAAA,AAAAtE,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA0E,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA1E;AAAA,AAAA2E,AAAA,AAAArE,AAAAP,AAAA2E;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAlH,AAAA,AAAAkH,AAAA,AAAA,AAAA,AAAA,AAAAjH,AAAAC,AAAAgH,AAAAA;AAAA,AAAAtJ,AAAAsJ,AAAA,AAAc7G;AAAd,AAAAzC,AAAAsJ,AAAA,AAAyB6C;AAAzB,AAAAnM,AAAAsJ,AAAA,AAAsCnL;AAAtC,AAAA,AAAA,AAAA+G,AAAAkE,AAAA,AAAA,AAAA,AAAA,AAAA,AACGgD,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAA9C,AAAA;;;;AAAA;;;;;AAAA,AAAAlE,AAAA,AAAAC,AAAAgE,AAAA,AAAAG,AAAA,AAAAjE,AAAA6D;;AAAA,AAAAhE,AAAA,AAAAC,AAAAgE,AAAA;;;AAAA,AAAAI,AAAA,AAAApJ,AAAA+I;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApH,AAAA,AAAAoH,AAAA,AAAA,AAAA,AAAA,AAAAnH,AAAAC,AAAAkH,AAAAA;AAAA,AAAAxJ,AAAAwJ,AAAA,AAAc/G;AAAd,AAAAzC,AAAAwJ,AAAA,AAAyB2C;AAAzB,AAAAnM,AAAAwJ,AAAA,AAAsCrL;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAA5C,AAAA,AAAA9D,AAAA0D;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA9E,AAAkDnF;AAJvD;;AAJH,AAAA,AAAAyI,AAAA;;;;AAAA;;;;;AAAA,AAAAxC,AAAA,AAAAC,AAAAsC,AAAA,AAAAG,AAAA,AAAAvC,AAAAmC;;AAAA,AAAAtC,AAAA,AAAAC,AAAAsC,AAAA;;;AAAA,AAAAI,AAAA,AAAA1H,AAAAqH;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1F,AAAA,AAAA0F,AAAA,AAAA,AAAA,AAAA,AAAAzF,AAAAC,AAAAwF,AAAAA;AAAAA,AAAqChI;AAArC,AAAAE,AAAA8H,AAAA,AAAoB3J;AAApB,AAAA6B,AAAA8H,AAAA,AAAwB5I;AAAxB,AAAA,AAAAsG,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAAoF;AAAA,AAAA,AAAAlF,AAAA,AAAA;;AAAA,AAAA,AAAAkF,AAAAA;;AAAA,AAAA,AAAAjF,AAAA,AAAAlE,AAAAmJ;AAAA,AAAA,AAAAjF;AAAA,AAAA,AAAAiF,AAAAjF;AAAA,AAAA,AAAA,AAAAC,AAAAgF;AAAA,AAAA/E,AAooEmB,AAAAuI,AAAAxD;AApoEnB9E,AAAA,AAAAC,AAAAF;AAAAgF,AAAA,AAAA5E,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAgF,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAhF;AAAA,AAAAiF,AAAA,AAAA3E,AAAAP,AAAAiF;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAxH,AAAA,AAAAwH,AAAA,AAAA,AAAA,AAAA,AAAAvH,AAAAC,AAAAsH,AAAAA;AAAA,AAAA5J,AAAA4J,AAAA,AAAcnH;AAAd,AAAAzC,AAAA4J,AAAA,AAAyBuC;AAAzB,AAAAnM,AAAA4J,AAAA,AAAsCzL;AAAtC,AAAA,AAAA,AAAA+G,AAAAwE,AAAA,AAAA,AAAA,AAAA,AAAA,AACG0C,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAxC,AAAA;;;;AAAA;;;;;AAAA,AAAAxE,AAAA,AAAAC,AAAAsE,AAAA,AAAAG,AAAA,AAAAvE,AAAAmE;;AAAA,AAAAtE,AAAA,AAAAC,AAAAsE,AAAA;;;AAAA,AAAAI,AAAA,AAAA1J,AAAAqJ;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1H,AAAA,AAAA0H,AAAA,AAAA,AAAA,AAAA,AAAAzH,AAAAC,AAAAwH,AAAAA;AAAA,AAAA9J,AAAA8J,AAAA,AAAcrH;AAAd,AAAAzC,AAAA8J,AAAA,AAAyBqC;AAAzB,AAAAnM,AAAA8J,AAAA,AAAsC3L;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAAtC,AAAA,AAAApE,AAAAgE;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAApF,AAAkDnF;AAR1D,AAAA2I,AAAA,AAAApC,AAAAgC,AAIG;;;AAJH;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAApD,AAA4CiD;;;AALjD,AAAA,AAAAX,AAAA;;;;AAAA;;;;;AAAA,AAAAxB,AAAA,AAAAC,AAAAsB,AAAA,AAAAG,AAAA,AAAAvB,AAAAmB;;AAAA,AAAAtB,AAAA,AAAAC,AAAAsB,AAAA;;;AAAA,AAAAI,AAAA,AAAA1G,AAAAqG;AAAA,AAAA9F,AAAAmG,AAAA,AAAA,AAAOO;AAAP,AAAA1G,AAAAmG,AAAA,AAAA,AAAmBQ;AAAnB,AAAA,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAUhF,AAA6B,AAAA,AAAcyJ,AACtD,AAAC1F,AAAUhE;;AAFnB,AAGoB,AAAC4J,AAAa,AAAA,AAAA,AAAA/I,AAAa,AAACgJ,AAAsBH;;AAAgBA,AACnF,AAACzB,AACC,AAAAvB,AAAA;AAAA0D;AAAA,AAAA,AAAAxD,AAAA,AAAA;;AAAA,AAAA,AAAAwD,AAAAA;;AAAA,AAAA,AAAAvD,AAAA,AAAAlE,AAAAyH;AAAA,AAAA,AAAAvD;AAAA,AAAA,AAAAuD,AAAAvD;AAAA,AAAA,AAAA,AAAAC,AAAAsD;AAAA,AAAArD,AA4oE2B,AAAAuI,AAAAlF;AA5oE3BpD,AAAA,AAAAC,AAAAF;AAAAsD,AAAA,AAAAlD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAsD,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAtD;AAAA,AAAAuD,AAAA,AAAAjD,AAAAP,AAAAuD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA9F,AAAA,AAAA8F,AAAA,AAAA,AAAA,AAAA,AAAA7F,AAAAC,AAAA4F,AAAAA;AAAAA,AAAqCpI;AAArC,AAAAE,AAAAkI,AAAA,AAAoB/J;AAApB,AAAA6B,AAAAkI,AAAA,AAAwBhJ;AAAxB,AAAA,AAAA,AAAAgG,AAAA8C,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAACpF,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAA0F;AAAA,AAAA,AAAAxF,AAAA,AAAA;;AAAA,AAAA,AAAAwF,AAAAA;;AAAA,AAAA,AAAAvF,AAAA,AAAAlE,AAAAyJ;AAAA,AAAA,AAAAvF;AAAA,AAAA,AAAAuF,AAAAvF;AAAA,AAAA,AAAA,AAAAC,AAAAsF;AAAA,AAAArF,AAooEmB,AAAAuI,AAAAlD;AApoEnBpF,AAAA,AAAAC,AAAAF;AAAAsF,AAAA,AAAAlF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAsF,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAtF;AAAA,AAAAuF,AAAA,AAAAjF,AAAAP,AAAAuF;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA9H,AAAA,AAAA8H,AAAA,AAAA,AAAA,AAAA,AAAA7H,AAAAC,AAAA4H,AAAAA;AAAA,AAAAlK,AAAAkK,AAAA,AAAczH;AAAd,AAAAzC,AAAAkK,AAAA,AAAyBiC;AAAzB,AAAAnM,AAAAkK,AAAA,AAAsC/L;AAAtC,AAAA,AAAA,AAAA+G,AAAA8E,AAAA,AAAA,AAAA,AAAA,AAAA,AACGoC,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAlC,AAAA;;;;AAAA;;;;;AAAA,AAAA9E,AAAA,AAAAC,AAAA4E,AAAA,AAAAG,AAAA,AAAA7E,AAAAyE;;AAAA,AAAA5E,AAAA,AAAAC,AAAA4E,AAAA;;;AAAA,AAAAI,AAAA,AAAAhK,AAAA2J;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhI,AAAA,AAAAgI,AAAA,AAAA,AAAA,AAAA,AAAA/H,AAAAC,AAAA8H,AAAAA;AAAA,AAAApK,AAAAoK,AAAA,AAAc3H;AAAd,AAAAzC,AAAAoK,AAAA,AAAyB+B;AAAzB,AAAAnM,AAAAoK,AAAA,AAAsCjM;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAAhC,AAAA,AAAA1E,AAAAsE;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA1F,AAAkDnF;AAJvD;;AAJH,AAAA,AAAA+I,AAAA;;;;AAAA;;;;;AAAA,AAAA9C,AAAA,AAAAC,AAAA4C,AAAA,AAAAG,AAAA,AAAA7C,AAAAyC;;AAAA,AAAA5C,AAAA,AAAAC,AAAA4C,AAAA;;;AAAA,AAAAI,AAAA,AAAAhI,AAAA2H;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhG,AAAA,AAAAgG,AAAA,AAAA,AAAA,AAAA,AAAA/F,AAAAC,AAAA8F,AAAAA;AAAAA,AAAqCtI;AAArC,AAAAE,AAAAoI,AAAA,AAAoBjK;AAApB,AAAA6B,AAAAoI,AAAA,AAAwBlJ;AAAxB,AAAA,AAAAsG,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAAgG;AAAA,AAAA,AAAA9F,AAAA,AAAA;;AAAA,AAAA,AAAA8F,AAAAA;;AAAA,AAAA,AAAA7F,AAAA,AAAAlE,AAAA+J;AAAA,AAAA,AAAA7F;AAAA,AAAA,AAAA6F,AAAA7F;AAAA,AAAA,AAAA,AAAAC,AAAA4F;AAAA,AAAA3F,AAooEmB,AAAAuI,AAAA5C;AApoEnB1F,AAAA,AAAAC,AAAAF;AAAA4F,AAAA,AAAAxF,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA4F,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA5F;AAAA,AAAA6F,AAAA,AAAAvF,AAAAP,AAAA6F;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApI,AAAA,AAAAoI,AAAA,AAAA,AAAA,AAAA,AAAAnI,AAAAC,AAAAkI,AAAAA;AAAA,AAAAxK,AAAAwK,AAAA,AAAc/H;AAAd,AAAAzC,AAAAwK,AAAA,AAAyB2B;AAAzB,AAAAnM,AAAAwK,AAAA,AAAsCrM;AAAtC,AAAA,AAAA,AAAA+G,AAAAoF,AAAA,AAAA,AAAA,AAAA,AAAA,AACG8B,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAA5B,AAAA;;;;AAAA;;;;;AAAA,AAAApF,AAAA,AAAAC,AAAAkF,AAAA,AAAAG,AAAA,AAAAnF,AAAA+E;;AAAA,AAAAlF,AAAA,AAAAC,AAAAkF,AAAA;;;AAAA,AAAAI,AAAA,AAAAtK,AAAAiK;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAtI,AAAA,AAAAsI,AAAA,AAAA,AAAA,AAAA,AAAArI,AAAAC,AAAAoI,AAAAA;AAAA,AAAA1K,AAAA0K,AAAA,AAAcjI;AAAd,AAAAzC,AAAA0K,AAAA,AAAyByB;AAAzB,AAAAnM,AAAA0K,AAAA,AAAsCvM;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAA1B,AAAA,AAAAhF,AAAA4E;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAhG,AAAkDnF;AAR1D,AAAAiJ,AAAA,AAAA1C,AAAAsC,AAIG;;;AAJH;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA1D,AAA4CiD;AALjD,AAAAT,AAAA,AAAApB,AAAAgB;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAApC,AAA0B+B;AARhC;;AADF,AAAA,AAAAL,AAAA;;;;AAAA;;;;;AAAA,AAAAZ,AAAA,AAAAC,AAAAU,AAAA,AAAAG,AAAA,AAAAX,AAAAO;;AAAA,AAAAV,AAAA,AAAAC,AAAAU,AAAA;;;AAAA,AAAAI,AAAA,AAAA9F,AAAAyF;AAAA,AAAAlF,AAAAuF,AAAA,AAAA,AAAOC;AAAP,AAAAxF,AAAAuF,AAAA,AAAA,AAA0BE;AAA1B,AAAA,AAAAZ,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAACa,AAAUD,AACL,AAAA,AAAA,AAACxD,AAAUpF,AAAuB2I,AACtC,AAACxE,AAAUlE,AACd,AAAC6I,AAAoBC,AACfJ,AACNjD,AAAyB,AAACoD,AAAoBE,AAC1C,AAAC7E,AAAUjE,AAChB,AAACkI,AACC,AAAAvB,AAAA;AAAA0C;AAAA,AAAA,AAAAxC,AAAA,AAAA;AAAA,AAAA,AAAAwC,AAAAA;;AAAA,AAAA,AAAAvC,AAAA,AAAAlE,AAAAyG;AAAA,AAAA,AAAAvC;AAAA,AAAA,AAAAuC,AAAAvC;AAAA,AAAA,AAAA,AAAAC,AAAAsC;AAAA,AAAArC,AAipEgC,AAAAuI,AAAAlG;AAjpEhCpC,AAAA,AAAAC,AAAAF;AAAAsC,AAAA,AAAAlC,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAsC,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAtC;AAAA,AAAAuC,AAAA,AAAAjC,AAAAP,AAAAuC;AAAA,AAAAtG,AAAAuG,AAAA,AAAA,AAAOG;AAAP,AAAA1G,AAAAuG,AAAA,AAAA,AAAmBI;AAAnB,AAAA,AAAA,AAAApC,AAAA8B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAACpE,AAAUhF,AAA6B,AAAA,AAAcyJ,AACtD,AAAC1F,AAAUhE;;AAFnB,AAGoB,AAAC4J,AAAa,AAAA,AAAA,AAAA/I,AAAa,AAACgJ,AAAsBH;;AAAgBA,AACnF,AAACzB,AACC,AAAAvB,AAAA;AAAAgE;AAAA,AAAA,AAAA9D,AAAA,AAAA;;AAAA,AAAA,AAAA8D,AAAAA;;AAAA,AAAA,AAAA7D,AAAA,AAAAlE,AAAA+H;AAAA,AAAA,AAAA7D;AAAA,AAAA,AAAA6D,AAAA7D;AAAA,AAAA,AAAA,AAAAC,AAAA4D;AAAA,AAAA3D,AA4oE2B,AAAAuI,AAAA5E;AA5oE3B1D,AAAA,AAAAC,AAAAF;AAAA4D,AAAA,AAAAxD,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA4D,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA5D;AAAA,AAAA6D,AAAA,AAAAvD,AAAAP,AAAA6D;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApG,AAAA,AAAAoG,AAAA,AAAA,AAAA,AAAA,AAAAnG,AAAAC,AAAAkG,AAAAA;AAAAA,AAAqC1I;AAArC,AAAAE,AAAAwI,AAAA,AAAoBrK;AAApB,AAAA6B,AAAAwI,AAAA,AAAwBtJ;AAAxB,AAAA,AAAA,AAAAgG,AAAAoD,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC1F,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAAsG;AAAA,AAAA,AAAApG,AAAA,AAAA;;AAAA,AAAA,AAAAoG,AAAAA;;AAAA,AAAA,AAAAnG,AAAA,AAAAlE,AAAAqK;AAAA,AAAA,AAAAnG;AAAA,AAAA,AAAAmG,AAAAnG;AAAA,AAAA,AAAA,AAAAC,AAAAkG;AAAA,AAAAjG,AAooEmB,AAAAuI,AAAAtC;AApoEnBhG,AAAA,AAAAC,AAAAF;AAAAkG,AAAA,AAAA9F,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAkG,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAlG;AAAA,AAAAmG,AAAA,AAAA7F,AAAAP,AAAAmG;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1I,AAAA,AAAA0I,AAAA,AAAA,AAAA,AAAA,AAAAzI,AAAAC,AAAAwI,AAAAA;AAAA,AAAA9K,AAAA8K,AAAA,AAAcrI;AAAd,AAAAzC,AAAA8K,AAAA,AAAyBqB;AAAzB,AAAAnM,AAAA8K,AAAA,AAAsC3M;AAAtC,AAAA,AAAA,AAAA+G,AAAA0F,AAAA,AAAA,AAAA,AAAA,AAAA,AACGwB,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAtB,AAAA;;;;AAAA;;;;;AAAA,AAAA1F,AAAA,AAAAC,AAAAwF,AAAA,AAAAG,AAAA,AAAAzF,AAAAqF;;AAAA,AAAAxF,AAAA,AAAAC,AAAAwF,AAAA;;;AAAA,AAAAI,AAAA,AAAA5K,AAAAuK;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA5I,AAAA,AAAA4I,AAAA,AAAA,AAAA,AAAA,AAAA3I,AAAAC,AAAA0I,AAAAA;AAAA,AAAAhL,AAAAgL,AAAA,AAAcvI;AAAd,AAAAzC,AAAAgL,AAAA,AAAyBmB;AAAzB,AAAAnM,AAAAgL,AAAA,AAAsC7M;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAApB,AAAA,AAAAtF,AAAAkF;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAtG,AAAkDnF;AAJvD;;AAJH,AAAA,AAAAqJ,AAAA;;;;AAAA;;;;;AAAA,AAAApD,AAAA,AAAAC,AAAAkD,AAAA,AAAAG,AAAA,AAAAnD,AAAA+C;;AAAA,AAAAlD,AAAA,AAAAC,AAAAkD,AAAA;;;AAAA,AAAAI,AAAA,AAAAtI,AAAAiI;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAtG,AAAA,AAAAsG,AAAA,AAAA,AAAA,AAAA,AAAArG,AAAAC,AAAAoG,AAAAA;AAAAA,AAAqC5I;AAArC,AAAAE,AAAA0I,AAAA,AAAoBvK;AAApB,AAAA6B,AAAA0I,AAAA,AAAwBxJ;AAAxB,AAAA,AAAAsG,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAA4G;AAAA,AAAA,AAAA1G,AAAA,AAAA;;AAAA,AAAA,AAAA0G,AAAAA;;AAAA,AAAA,AAAAzG,AAAA,AAAAlE,AAAA2K;AAAA,AAAA,AAAAzG;AAAA,AAAA,AAAAyG,AAAAzG;AAAA,AAAA,AAAA,AAAAC,AAAAwG;AAAA,AAAAvG,AAooEmB,AAAAuI,AAAAhC;AApoEnBtG,AAAA,AAAAC,AAAAF;AAAAwG,AAAA,AAAApG,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAwG,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAxG;AAAA,AAAAyG,AAAA,AAAAnG,AAAAP,AAAAyG;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAhJ,AAAA,AAAAgJ,AAAA,AAAA,AAAA,AAAA,AAAA/I,AAAAC,AAAA8I,AAAAA;AAAA,AAAApL,AAAAoL,AAAA,AAAc3I;AAAd,AAAAzC,AAAAoL,AAAA,AAAyBe;AAAzB,AAAAnM,AAAAoL,AAAA,AAAsCjN;AAAtC,AAAA,AAAA,AAAA+G,AAAAgG,AAAA,AAAA,AAAA,AAAA,AAAA,AACGkB,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAhB,AAAA;;;;AAAA;;;;;AAAA,AAAAhG,AAAA,AAAAC,AAAA8F,AAAA,AAAAG,AAAA,AAAA/F,AAAA2F;;AAAA,AAAA9F,AAAA,AAAAC,AAAA8F,AAAA;;;AAAA,AAAAI,AAAA,AAAAlL,AAAA6K;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAlJ,AAAA,AAAAkJ,AAAA,AAAA,AAAA,AAAA,AAAAjJ,AAAAC,AAAAgJ,AAAAA;AAAA,AAAAtL,AAAAsL,AAAA,AAAc7I;AAAd,AAAAzC,AAAAsL,AAAA,AAAyBa;AAAzB,AAAAnM,AAAAsL,AAAA,AAAsCnN;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAAd,AAAA,AAAA5F,AAAAwF;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA5G,AAAkDnF;AAR1D,AAAAuJ,AAAA,AAAAhD,AAAA4C,AAIG;;;AAJH;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAhE,AAA4CiD;;;AALjD,AAAA,AAAAL,AAAA;;;;AAAA;;;;;AAAA,AAAA9B,AAAA,AAAAC,AAAA4B,AAAA,AAAAG,AAAA,AAAA7B,AAAAyB;;AAAA,AAAA5B,AAAA,AAAAC,AAAA4B,AAAA;;;AAAA,AAAAI,AAAA,AAAAhH,AAAA2G;AAAA,AAAApG,AAAAyG,AAAA,AAAA,AAAOC;AAAP,AAAA1G,AAAAyG,AAAA,AAAA,AAAmBE;AAAnB,AAAA,AAAA9B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAUhF,AAA6B,AAAA,AAAcyJ,AACtD,AAAC1F,AAAUhE;;AAFnB,AAGoB,AAAC4J,AAAa,AAAA,AAAA,AAAA/I,AAAa,AAACgJ,AAAsBH;;AAAgBA,AACnF,AAACzB,AACC,AAAAvB,AAAA;AAAAsE;AAAA,AAAA,AAAApE,AAAA,AAAA;AAAA,AAAA,AAAAoE,AAAAA;;AAAA,AAAA,AAAAnE,AAAA,AAAAlE,AAAAqI;AAAA,AAAA,AAAAnE;AAAA,AAAA,AAAAmE,AAAAnE;AAAA,AAAA,AAAA,AAAAC,AAAAkE;AAAA,AAAAjE,AA4oE2B,AAAAuI,AAAAtE;AA5oE3BhE,AAAA,AAAAC,AAAAF;AAAAkE,AAAA,AAAA9D,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAkE,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAlE;AAAA,AAAAmE,AAAA,AAAA7D,AAAAP,AAAAmE;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA1G,AAAA,AAAA0G,AAAA,AAAA,AAAA,AAAA,AAAAzG,AAAAC,AAAAwG,AAAAA;AAAAA,AAAqChJ;AAArC,AAAAE,AAAA8I,AAAA,AAAoB3K;AAApB,AAAA6B,AAAA8I,AAAA,AAAwB5J;AAAxB,AAAA,AAAA,AAAAgG,AAAA0D,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAChG,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAAkH;AAAA,AAAA,AAAAhH,AAAA,AAAA;;AAAA,AAAA,AAAAgH,AAAAA;;AAAA,AAAA,AAAA/G,AAAA,AAAAlE,AAAAiL;AAAA,AAAA,AAAA/G;AAAA,AAAA,AAAA+G,AAAA/G;AAAA,AAAA,AAAA,AAAAC,AAAA8G;AAAA,AAAA7G,AAooEmB,AAAAuI,AAAA1B;AApoEnB5G,AAAA,AAAAC,AAAAF;AAAA8G,AAAA,AAAA1G,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAA8G,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAA9G;AAAA,AAAA+G,AAAA,AAAAzG,AAAAP,AAAA+G;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAtJ,AAAA,AAAAsJ,AAAA,AAAA,AAAA,AAAA,AAAArJ,AAAAC,AAAAoJ,AAAAA;AAAA,AAAA1L,AAAA0L,AAAA,AAAcjJ;AAAd,AAAAzC,AAAA0L,AAAA,AAAyBS;AAAzB,AAAAnM,AAAA0L,AAAA,AAAsCvN;AAAtC,AAAA,AAAA,AAAA+G,AAAAsG,AAAA,AAAA,AAAA,AAAA,AAAA,AACGY,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAV,AAAA;;;;AAAA;;;;;AAAA,AAAAtG,AAAA,AAAAC,AAAAoG,AAAA,AAAAG,AAAA,AAAArG,AAAAiG;;AAAA,AAAApG,AAAA,AAAAC,AAAAoG,AAAA;;;AAAA,AAAAI,AAAA,AAAAxL,AAAAmL;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAxJ,AAAA,AAAAwJ,AAAA,AAAA,AAAA,AAAA,AAAAvJ,AAAAC,AAAAsJ,AAAAA;AAAA,AAAA5L,AAAA4L,AAAA,AAAcnJ;AAAd,AAAAzC,AAAA4L,AAAA,AAAyBO;AAAzB,AAAAnM,AAAA4L,AAAA,AAAsCzN;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAAR,AAAA,AAAAlG,AAAA8F;;;AAAA;;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAlH,AAAkDnF;AAJvD;;AAJH,AAAA,AAAA2J,AAAA;;;;AAAA;;;;;AAAA,AAAA1D,AAAA,AAAAC,AAAAwD,AAAA,AAAAG,AAAA,AAAAzD,AAAAqD;;AAAA,AAAAxD,AAAA,AAAAC,AAAAwD,AAAA;;;AAAA,AAAAI,AAAA,AAAA5I,AAAAuI;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA5G,AAAA,AAAA4G,AAAA,AAAA,AAAA,AAAA,AAAA3G,AAAAC,AAAA0G,AAAAA;AAAAA,AAAqClJ;AAArC,AAAAE,AAAAgJ,AAAA,AAAoB7K;AAApB,AAAA6B,AAAAgJ,AAAA,AAAwB9J;AAAxB,AAAA,AAAAsG,AAAA,AAAA,AAAA,AACQ,AAAA,AAAA,AAAC5C,AAAU7E,AAAmC,AAAA,AAAYI,AAE9DwH,AAAS7F,AACV,AAAA,AAAA,AAAA,AAAA,AAAA,AAAM,AAAA,AAAG,AAAC8E,AAAM1F,AACb+J,AAAyBnL,AACxB,AAACwI,AAAoB4C,AACtB,AAACtD,AACC,AAAAvB,AAAA;AAAAwH;AAAA,AAAA,AAAAtH,AAAA,AAAA;AAAA,AAAA,AAAAsH,AAAAA;;AAAA,AAAA,AAAArH,AAAA,AAAAlE,AAAAuL;AAAA,AAAA,AAAArH;AAAA,AAAA,AAAAqH,AAAArH;AAAA,AAAA,AAAA,AAAAC,AAAAoH;AAAA,AAAAnH,AAooEmB,AAAAuI,AAAApB;AApoEnBlH,AAAA,AAAAC,AAAAF;AAAAoH,AAAA,AAAAhH,AAAAH;AAAA,AAAA,AAAA,AAAA,AAAAoH,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAApH;AAAA,AAAAqH,AAAA,AAAA/G,AAAAP,AAAAqH;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA5J,AAAA,AAAA4J,AAAA,AAAA,AAAA,AAAA,AAAA3J,AAAAC,AAAA0J,AAAAA;AAAA,AAAAhM,AAAAgM,AAAA,AAAcvJ;AAAd,AAAAzC,AAAAgM,AAAA,AAAyBG;AAAzB,AAAAnM,AAAAgM,AAAA,AAAsC7N;AAAtC,AAAA,AAAA,AAAA+G,AAAA4G,AAAA,AAAA,AAAA,AAAA,AAAA,AACGM,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;;;AADrF,AAAA,AAAAJ,AAAA;;;;AAAA;;;;;AAAA,AAAA5G,AAAA,AAAAC,AAAA0G,AAAA,AAAAG,AAAA,AAAA3G,AAAAuG;;AAAA,AAAA1G,AAAA,AAAAC,AAAA0G,AAAA;;;AAAA,AAAAI,AAAA,AAAA9L,AAAAyL;AAAAK,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA9J,AAAA,AAAA8J,AAAA,AAAA,AAAA,AAAA,AAAA7J,AAAAC,AAAA4J,AAAAA;AAAA,AAAAlM,AAAAkM,AAAA,AAAczJ;AAAd,AAAAzC,AAAAkM,AAAA,AAAyBC;AAAzB,AAAAnM,AAAAkM,AAAA,AAAsC/N;AAAtC,AAAA,AAAAqH,AAAA,AAAA,AAAA,AAAA,AAAA,AACG4G,AAAiB,AAAA,AAAmBjO;;AADvC,AACuD,AAACoJ,AAAapJ;;AAAM,AAAAkO,AAAI5J;AAAJ,AAAA,AAAA4J;AAAAA;;AAAUF;;AADrF,AAAAF,AAAA,AAAAxG,AAAAoG;;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAxH,AAAkDnF;AAR1D,AAAA6J,AAAA,AAAAtD,AAAAkD,AAIG;;;AAJH;;;;AAAA,AAAA;;;AAAA,AAAA,AAAAtE,AAA4CiD;AALjD,AAAAH,AAAA,AAAA1B,AAAAsB;;;AAAA;;;;AAAA,AAAA;;;AAAA,AAAA,AAAA1C,AAA0B+B;AATlC,AAAAH,AAAA,AAAAR,AAAAI,AACE;;;AADF;;;;AAAA,AAAA;;AAAA,AAAA,AAAAxB,AAAgCpC;;;;AA0B3C;;;;AAAA,AAAMqK,AAGHC;AAHH,AAIE,AAAAC,AAA8C,AAACE,AAAqBH;AAApEC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAApK,AAAA,AAAAoK,AAAA,AAAA,AAAA,AAAA,AAAAnK,AAAAC,AAAAkK,AAAAA;AAAAA,AAAwCC;AAAxC,AAAAzM,AAAAwM,AAAA,AAAcrO;AAAd,AAAA6B,AAAAwM,AAAA,AAAwB/J;AAAxB,AAAAjE,AACMwD,AAAa,AAAA2K,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACd1K,AAAe,AAAC3B,AAAiBpC;AAFvC,AAGE,AAAU,AAAC0O,AAAcpK;AAAzB;;AAAA,AAEE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMR,AAAiC,AAAA,AAAI,AAAC6K,AAAWrK,AAAOsK,AAAgB1M,AACrC,AAAA,AAAI,AAACyM,AAAWrK,AAAOuK,AAAkB3M;AADlF,AAAA,AAEGwB,AAAa4K,AAAKzK,AAAYC,AAAWC","names":["athens.views.node-page/page-style","athens.views.node-page/title-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","garden.selectors/+","athens.views.node-page/references-style","athens.views.node-page/references-heading-style","athens.views.node-page/references-list-style","athens.views.node-page/references-group-title-style","athens.views.node-page/references-group-style","athens.style.color.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/reference-breadcrumbs-style","athens.views.node-page/references-group-block-style","athens.views.node-page/page-menu-toggle-style","athens.views.node-page/handler","val","uid","G__58570","re-frame.core/dispatch","athens.views.node-page/db-handler","goog.functions/debounce","cljs.core/deref","athens.views.node-page/get-ref-ids","pattern","G__58571","G__58572","G__58573","posh.reagent/q","athens.db/dsdb","athens.views.node-page/merge-parents-and-block","ref-ids","parents","cljs.core/reduce-kv","m","_","v","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","athens.db/get-parents-recursively","blocks","cljs.core.map.cljs$core$IFn$_invoke$arity$2","id","athens.db/get-block-document","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","block","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core.get.cljs$core$IFn$_invoke$arity$2","athens.views.node-page/group-by-parent","cljs.core/group-by","x","cljs.core/first","athens.views.node-page/get-data","cljs.core/seq","athens.views.node-page/is-timeline-page","cljs.core/boolean","e58574","vec__58575","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","d","y","clojure.string.split.cljs$core$IFn$_invoke$arity$2","tick.alpha.api.date.cljs$core$IFn$_invoke$arity$1","clojure.string.join.cljs$core$IFn$_invoke$arity$2","js/Object","athens.views.node-page/handle-new-first-child-block-click","parent-uid","new-uid","athens.util/gen-block-uid","now","athens.util/now-ts","G__58578","G__58579","athens.views.node-page/placeholder-block-el","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","athens.views.blocks/bullet-style","athens.views.node-page/node-page-el","state","reagent.core.atom.cljs$core$IFn$_invoke$arity$1","editing-uid","ref-groups","timeline-page?","map__58580","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","map__58581","children","title","is-shortcut?","show","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","komponentit.autosize/textarea","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","e","G__58584","G__58585","athens.views.buttons/button","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","rect","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","cljs.core/merge","js/module$node_modules$$material_ui$icons$index.ExpandMore","athens.views.dropdown/dropdown-style","athens.views.dropdown/menu-style","G__58586","js/module$node_modules$$material_ui$icons$index.BookmarkBorder","G__58587","js/module$node_modules$$material_ui$icons$index.Bookmark","athens.views.dropdown/menu-separator-style","athens.router/navigate","G__58588","js/module$node_modules$$material_ui$icons$index.Delete","athens.parse-renderer/parse-and-render","cljs.core/empty?","iter__4582__auto__","s__58590","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__58592","cljs.core/chunk-buffer","i__58591","map__58593","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__58589","cljs.core/chunk-rest","map__58595","cljs.core/cons","cljs.core/rest","child","athens.views.blocks/block-el","cljs.core.doall.cljs$core$IFn$_invoke$arity$1","s__58598","b__58600","i__58599","vec__58601","iter__58597","vec__58662","linked-or-unlinked","refs","cljs.core/not-empty","reagent.core/adapt-react-class","js/module$node_modules$$material_ui$icons$index.Link","js/module$node_modules$$material_ui$icons$index.FilterList","s__58605","b__58607","i__58606","vec__58608","iter__58604","vec__58635","s__58666","b__58668","i__58667","vec__58669","iter__58665","vec__58696","group-title","group","athens.router.navigate_uid.cljs$core$IFn$_invoke$arity$1","athens.parse-renderer/pull-node-from-string","s__58612","b__58614","i__58613","map__58615","iter__58611","map__58625","s__58639","b__58641","i__58640","map__58642","iter__58638","map__58652","s__58673","b__58675","i__58674","map__58676","iter__58672","map__58686","s__58700","b__58702","i__58701","map__58703","iter__58699","map__58713","athens.views.breadcrumbs/breadcrumbs-list","js/module$node_modules$$material_ui$icons$index.LocationOn","s__58618","b__58620","i__58619","map__58621","iter__58617","map__58623","s__58628","b__58630","i__58629","map__58631","iter__58627","map__58633","s__58645","b__58647","i__58646","map__58648","iter__58644","map__58650","s__58655","b__58657","i__58656","map__58658","iter__58654","map__58660","s__58679","b__58681","i__58680","map__58682","iter__58678","map__58684","s__58689","b__58691","i__58690","map__58692","iter__58688","map__58694","s__58706","b__58708","i__58707","map__58709","iter__58705","map__58711","s__58716","b__58718","i__58717","map__58719","iter__58715","map__58721","string","athens.views.breadcrumbs/breadcrumb","or__4185__auto__","athens.views.node-page/node-page-component","ident","map__58723","node","athens.db/get-node-document","G__58725","re-frame.core/subscribe","clojure.string/blank?","athens.util/escape-str","athens.patterns/linked","athens.patterns/unlinked","cljs.core/chunk-first"],"sourcesContent":["(ns athens.views.node-page\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :as parse-renderer :refer [pull-node-from-string]]\n    [athens.patterns :as patterns]\n    [athens.router :refer [navigate-uid navigate]]\n    [athens.style :refer [color]]\n    [athens.util :refer [now-ts gen-block-uid escape-str]]\n    [athens.views.blocks :refer [block-el bullet-style]]\n    [athens.views.breadcrumbs :refer [breadcrumbs-list breadcrumb]]\n    [athens.views.buttons :refer [button]]\n    [athens.views.dropdown :refer [dropdown-style menu-style menu-separator-style]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [clojure.string :as string]\n    [garden.selectors :as selectors]\n    [goog.functions :refer [debounce]]\n    [komponentit.autosize :as autosize]\n    [posh.reagent :refer [#_pull q]]\n    [re-frame.core :refer [dispatch subscribe]]\n    [reagent.core :as r]\n    [stylefy.core :as stylefy :refer [use-style]]\n    [tick.alpha.api :as t]))\n\n\n;;; Styles\n\n\n(def page-style\n  {:margin \"2rem auto\"\n   :padding \"1rem 2rem\"\n   :flex-basis \"100%\"\n   :max-width \"55rem\"})\n\n\n(def title-style\n  {:position \"relative\"\n   :overflow \"visible\"\n   :flex-grow \"1\"\n   :margin \"0.2em 0 0.2em 1rem\"\n   :letter-spacing \"-0.03em\"\n   :word-break \"break-word\"\n   ::stylefy/manual [[:textarea {:display \"none\"}]\n                     [:&:hover [:textarea {:display \"block\"\n                                           :z-index 1}]]\n                     [:textarea {:-webkit-appearance \"none\"\n                                 :cursor \"text\"\n                                 :resize \"none\"\n                                 :transform \"translate3d(0,0,0)\"\n                                 :color \"inherit\"\n                                 :font-weight \"inherit\"\n                                 :padding \"0\"\n                                 :letter-spacing \"inherit\"\n                                 :position \"absolute\"\n                                 :top \"0\"\n                                 :left \"0\"\n                                 :right \"0\"\n                                 :width \"100%\"\n                                 :min-height \"100%\"\n                                 :caret-color (color :link-color)\n                                 :background \"transparent\"\n                                 :margin \"0\"\n                                 :font-size \"inherit\"\n                                 :line-height \"inherit\"\n                                 :border-radius \"0.25rem\"\n                                 :transition \"opacity 0.15s ease\"\n                                 :border \"0\"\n                                 :opacity \"0\"\n                                 :font-family \"inherit\"}]\n                     [:textarea:focus\n                      :.is-editing {:outline \"none\"\n                                    :z-index 3\n                                    :display \"block\"\n                                    :opacity \"1\"}]\n                     [(selectors/+ :.is-editing :span) {:opacity 0}]]})\n\n\n(def references-style {:margin-block \"3em\"})\n\n\n(def references-heading-style\n  {:font-weight \"normal\"\n   :display \"flex\"\n   :padding \"0 2rem\"\n   :align-items \"center\"\n   ::stylefy/manual [[:svg {:margin-right \"0.25em\"\n                            :font-size \"1rem\"}]\n                     [:span {:flex \"1 1 100%\"}]]})\n\n\n(def references-list-style\n  {:font-size \"14px\"})\n\n\n(def references-group-title-style\n  {:color (color :link-color)\n   :margin \"0 1.5rem\"\n   :font-weight \"500\"\n   ::stylefy/manual [[:a:hover {:cursor \"pointer\"\n                                :text-decoration \"underline\"}]]})\n\n\n(def references-group-style\n  {:background (color :background-minus-2 :opacity-med)\n   :padding \"1rem 0.5rem\"\n   :border-radius \"0.25rem\"\n   :margin \"0.5em 0\"})\n\n\n(def reference-breadcrumbs-style\n  {:font-size \"12px\"\n   :padding \"0.25rem calc(2rem - 0.5em)\"})\n\n\n(def references-group-block-style\n  {:border-top [[\"1px solid \" (color :border-color)]]\n   :padding-block-start \"1em\"\n   :margin-block-start \"1em\"\n   ::stylefy/manual [[:&:first-of-type {:border-top \"0\"\n                                        :margin-block-start \"0\"}]]})\n\n\n(def page-menu-toggle-style\n  {:position \"absolute\"\n   :left \"-0.5rem\"\n   :border-radius \"1000px\"\n   :padding \"0.375rem 0.5rem\"\n   :color (color :body-text-color :opacity-high)\n   :top \"50%\"\n   :transform \"translate(-100%, -50%)\"})\n\n\n;;; Helpers\n\n\n(defn handler\n  [val uid]\n  (dispatch [:transact [[:db/add [:block/uid uid] :node/title val]]]))\n\n\n(def db-handler (debounce handler 500))\n\n\n(defn get-ref-ids\n  [pattern]\n  @(q '[:find [?e ...]\n        :in $ ?regex\n        :where\n        [?e :block/string ?s]\n        [(re-find ?regex ?s)]]\n      db/dsdb\n      pattern))\n\n\n(defn merge-parents-and-block\n  [ref-ids]\n  (let [parents (reduce-kv (fn [m _ v] (assoc m v (db/get-parents-recursively v)))\n                           {}\n                           ref-ids)\n        blocks (map (fn [id] (db/get-block-document id)) ref-ids)]\n    (mapv\n      (fn [block]\n        (merge block {:block/parents (get parents (:db/id block))}))\n      blocks)))\n\n\n(defn group-by-parent\n  [blocks]\n  (group-by (fn [x]\n              (-> x\n                  :block/parents\n                  first\n                  :node/title))\n            blocks))\n\n\n(defn get-data\n  [pattern]\n  (-> pattern get-ref-ids merge-parents-and-block group-by-parent seq))\n\n\n(defn is-timeline-page\n  [uid]\n  (boolean\n    (try\n      (let [[m d y] (string/split uid \"-\")]\n        (t/date (string/join \"-\" [y m d])))\n      (catch js/Object _ false))))\n\n\n(defn handle-new-first-child-block-click\n  [parent-uid]\n  (let [new-uid   (gen-block-uid)\n        now       (now-ts)]\n    (dispatch [:transact [{:block/uid       parent-uid\n                           :edit/time       now\n                           :block/children  [{:block/order  0\n                                              :block/uid    new-uid\n                                              :block/open   true\n                                              :block/string \"\"}]}]])\n    (dispatch [:editing/uid new-uid])))\n\n\n;;; Components\n\n(defn placeholder-block-el\n  [parent-uid]\n  [:div {:class \"block-container\"}\n   [:div {:style {:display \"flex\"}}\n    [:span (use-style bullet-style)]\n    [:span {:on-click #(handle-new-first-child-block-click parent-uid)} \"Click here to add content...\"]]])\n\n\n;; TODO: where to put page-level link filters?\n(defn node-page-el\n  [_ _ _ _]\n  (let [state (r/atom {:menu/show false\n                       :menu/x nil\n                       :menu/y nil})]\n    (fn [block editing-uid ref-groups timeline-page?]\n      (let [{:block/keys [children uid] title :node/title is-shortcut? :page/sidebar} block\n            {:menu/keys [show x y]} @state]\n\n        [:div (use-style page-style {:class [\"node-page\"]})\n         ;; TODO: implement timeline\n         ;;(when timeline-page?\n         ;;  [button {:on-click #(dispatch [:jump-to-timeline uid])}\n         ;;              [:<>\n         ;;               [:mui-icons Left]\n         ;;               [:span \"Timeline\"]]}])\n\n         ;; Header\n         [:h1 (use-style title-style {:data-uid uid :class \"page-header\"})\n          (when-not timeline-page?\n            [autosize/textarea\n             {:default-value title\n              :class         (when (= editing-uid uid) \"is-editing\")\n              :auto-focus    true\n              :on-change     (fn [e] (db-handler (.. e -target -value) uid))}])\n          [button {:class    [(when show \"active\")]\n                   :on-click (fn [e]\n                               (if show\n                                 (swap! state assoc :menu/show false)\n                                 (let [rect (.. e -target getBoundingClientRect)]\n                                   (swap! state merge {:menu/show true\n                                                       :menu/x    (.. rect -left)\n                                                       :menu/y    (.. rect -bottom)}))))\n                   :style    page-menu-toggle-style}\n           [:> mui-icons/ExpandMore]]\n\n          (when show\n            [:div (merge (use-style dropdown-style)\n                         {:style {:font-size \"14px\"\n                                  :position \"fixed\"\n                                  :left (str x \"px\")\n                                  :top (str y \"px\")}})\n             [:div (use-style menu-style)\n              (if is-shortcut?\n                [button {:on-click #(dispatch [:page/remove-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/BookmarkBorder]\n                  [:span \"Remove Shortcut\"]]]\n                [button {:on-click #(dispatch [:page/add-shortcut uid])}\n                 [:<>\n                  [:> mui-icons/Bookmark]\n                  [:span \"Add Shortcut\"]]])\n              [:hr (use-style menu-separator-style)]\n              [button {:on-click #(do\n                                    (navigate :pages)\n                                    (dispatch [:page/delete uid]))}\n               [:<> [:> mui-icons/Delete] [:span \"Delete Page\"]]]]])\n          (parse-renderer/parse-and-render title uid)]\n\n         ;; Children\n         (if (empty? children)\n           [placeholder-block-el uid]\n           [:div\n            (for [{:block/keys [uid] :as child} children]\n              ^{:key uid}\n              [block-el child])])\n\n\n         ;; References\n         (doall\n           (for [[linked-or-unlinked refs] ref-groups]\n             (when (not-empty refs)\n               [:section (use-style references-style {:key linked-or-unlinked})\n                [:h4 (use-style references-heading-style)\n                 [(r/adapt-react-class mui-icons/Link)]\n                 [:span linked-or-unlinked]\n                 [button {:disabled true} [(r/adapt-react-class mui-icons/FilterList)]]]\n                [:div (use-style references-list-style)\n                 (doall\n                   (for [[group-title group] refs]\n                     [:div (use-style references-group-style {:key (str \"group-\" group-title)})\n                      [:h4 (use-style references-group-title-style)\n                       [:a {:on-click #(navigate-uid (:block/uid @(pull-node-from-string group-title)))} group-title]]\n                      (doall\n                        (for [{:block/keys [uid parents] :as block} group]\n                          [:div (use-style references-group-block-style {:key (str \"ref-\" uid)})\n                           ;; TODO: expand parent on click\n                           [block-el block]\n                           (when (> (count parents) 1)\n                             [breadcrumbs-list {:style reference-breadcrumbs-style}\n                              [(r/adapt-react-class mui-icons/LocationOn)]\n                              (doall\n                                (for [{:keys [node/title block/string block/uid]} parents]\n                                  [breadcrumb {:key (str \"breadcrumb-\" uid) :on-click #(navigate-uid uid)} (or title string)]))])]))]))]])))]))))\n\n\n(defn node-page-component\n  \"One diff between datascript and posh: we don't have pull in q for posh\n  https://github.com/mpdairy/posh/issues/21\"\n  [ident]\n  (let [{:keys [block/uid node/title] :as node} (db/get-node-document ident)\n        editing-uid @(subscribe [:editing/uid])\n        timeline-page? (is-timeline-page uid)]\n    (when-not (string/blank? title)\n      ;; TODO: let users toggle open/close references\n      (let [ref-groups [[\"Linked References\" (-> (escape-str title) patterns/linked get-data)]\n                        [\"Unlinked References\" (-> (escape-str title) patterns/unlinked get-data)]]]\n        [node-page-el node editing-uid ref-groups timeline-page?]))))\n"]}