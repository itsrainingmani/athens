{"version":3,"sources":["shadow/remote/runtime/api.cljc"],"mappings":"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","names":["shadow$remote$runtime$api$IRuntime$relay_msg$dyn","x__4428__auto__","m__4429__auto__","shadow.remote.runtime.api/relay-msg","goog/typeOf","m__4426__auto__","cljs.core/missing-protocol","shadow$remote$runtime$api$IRuntime$add_extension$dyn","shadow.remote.runtime.api/add-extension","shadow$remote$runtime$api$IRuntime$del_extension$dyn","shadow.remote.runtime.api/del-extension","shadow.remote.runtime.api/IRuntime","runtime","msg","key","spec","p__59695","map__59696","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","shadow.remote.runtime.api/reply","mid","tid","res","G__59698","cljs.core.assoc","shadow$remote$runtime$api$Inspectable$describe$dyn","shadow.remote.runtime.api/describe","temp__5733__auto__","cljs.core/meta","meta-impl__4427__auto__","shadow.remote.runtime.api/Inspectable","thing","opts"],"sourcesContent":["(ns shadow.remote.runtime.api)\n\n(defprotocol IRuntime\n  (relay-msg [runtime msg])\n  (add-extension [runtime key spec])\n  (del-extension [runtime key]))\n\n(defn reply [runtime {:keys [mid tid]} res]\n  (let [res (-> res\n                (cond->\n                  mid\n                  (assoc :mid mid)\n                  tid\n                  (assoc :tid tid)))]\n    (relay-msg runtime res)))\n\n(defprotocol Inspectable\n  :extend-via-metadata true\n  (describe [thing opts] \"returns a map descriptor that tells system how to handle things further\"))\n\n(comment\n  ;; nav feels limited by being in metadata\n  ;; and coupled to the result of datafy\n  ;; also has no notion of async built-in which could be a problem for CLJS\n\n  ;; will still be used as the default descriptor impl\n\n  ;; I would like to transmit metadata to the UI but by nav/datafy potentially\n  ;; being in metadata I have to filter it first, which seems like a bad default\n\n  ;; returns one-line text summary of something. default to edn preview, could be custom\n  {::preview-self (fn [opts])\n   ;; returns map description. similar to :summary view right now\n   ::summary (fn [opts]) => {:entries 123 :obj-type \"cljs.core/PersistentArrayMap\"}\n   ::preview-entry (fn [idx opts])\n   ;; similar to nav, but navs by idx\n   ::nav (fn [idx opts callback])})\n\n"]}